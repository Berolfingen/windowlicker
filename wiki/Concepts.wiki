#summary A glossary of Window Licker concepts

=== Gesture ===

An interaction with the user interface via the mouse and/or keyboard.  Window Licker runs tests by performing Gestures and observing the results.  

There are a number of primitive gestures, such as pressing a mouse button, releasing a mouse button, moving the mouse, moving the mouse wheel, pressing a key and releasing a key. Gestures can be composed from other gestures.  For example, typing a character is a sequence of three gestures: pressing the key, waiting a short while and finally releasing a key.  Typing text is a sequence of gestures, each of which types one character.

The [http://code.google.com/p/windowlicker/source/browse/trunk/java/com/objogate/wl/gesture/Gestures.java Gestures] class contains syntactic sugar for describing gestures to make test code easier to read.

The vocabulary of gestures is extensible.  A new gesture can be written by implementing the [http://code.google.com/p/windowlicker/source/browse/trunk/java/com/objogate/wl/Gesture.java Gesture interface] and writing a factory function to act as synctactic sugar.


=== Probe ===

An object that performs an asynchronous test and reports whether the test succeeded or failed, and why.

Probes are executed by a ProbeRunner, which is responsible for asynchronously evaluating the probe, collecting results and throwing

=== Matcher ===

A predicate over some value that can describe itself.  Window Licker uses Matchers to describe user interface components.  The [http://code.google.com/p/windowlicker/source/browse/trunk/java/com/objogate/wl/matcher/ComponentMatchers.java ComponentMatchers] class defines syntactic sugar functions to make code using matchers easier to read.

=== Tracker ====

An object that tracks a location on screen.  The mouse movement gesture uses a Tracker to define the destination of the mouse.  A Tracker can track a moving object, for example the center of a component that is being animated.